[General]
#debug-on-errors = true
sim-time-limit = 3000s
output-scalar-file-append = true
#network = inet.examples.adhoc.pruebasGateWay.Grid_mesh3
network = inet.examples.manetrouting.meshTest.meshTest
num-rngs = 2
cmdenv-status-frequency = 2000s

cmdenv-express-mode = true
tkenv-plugin-path = ../../../Etc/plugins
#tkenv-default-run=1

**.vector-recording = false
**.debug = true
**.coreDebug = false

**.meshChannels = 1

#disable ARP protocols
**.arpType = "GlobalARP"

#**.fixhostA[*].wlan.mgmt.ETXEstimate = true
#**.fixhost6A[*].wlan.mgmt.ETXEstimate = true
#**.fixhost7A[*].wlan.mgmt.ETXEstimate = true
#**.wlanMesh.mgmt.ETXEstimate = true

**.fixhostA[*].wlan.radio[0].channelNumber = 0
**.fixhost6A[*].wlan.radio[0].channelNumber = 0
**.fixhost7A[*].wlan.radio[0].channelNumber = 0
**.wlanMesh.radio[0].channelNumber = 0

**.meshHost[*].wlan[0].radio.channelNumber = 0

**.fixhostA[*].wlan.radio[1].channelNumber = 2
**.fixhost6A[*].wlan.radio[1].channelNumber = 2
**.fixhost7A[*].wlan.radio[1].channelNumber = 2
**.wlanMesh.radio[1].channelNumber = 2

**.fixhostA[*].wlan.radio[2].channelNumber = 3
**.fixhost6A[*].wlan.radio[2].channelNumber = 3
**.fixhost7A[*].wlan.radio[2].channelNumber = 3
**.wlanMesh.radio[2].channelNumber = 3

**.fixhostA[*].wlan.radio[3].channelNumber = 4
**.fixhost6A[*].wlan.radio[3].channelNumber = 4
**.fixhost7A[*].wlan.radio[3].channelNumber = 4
**.wlanMesh.radio[3].channelNumber = 4

**.fixhostA[*].wlan.radio[4].channelNumber = 5
**.fixhost6A[*].wlan.radio[4].channelNumber = 5
**.fixhost7A[*].wlan.radio[4].channelNumber = 5
**.wlanMesh.radio[4].channelNumber = 5

**.fixhostA[*].wlan.radio[5].channelNumber = 6
**.fixhost6A[*].wlan.radio[5].channelNumber = 6
**.fixhost7A[*].wlan.radio[5].channelNumber = 6
**.wlanMesh.radio[5].channelNumber = 6


**.wlan[0].radio.channelNumber = 1
**.channelNumber = 0


# mobility
#**.host*.mobilityType = "inet.mobility.RestrictedConstSpeedMobility"
**.meshHost[*].mobility.constraintAreaMinX = 0m
**.meshHost[*].mobility.constraintAreaMinY = 0m
**.meshHost[*].mobility.constraintAreaMaxX = 1000m
**.meshHost[*].mobility.constraintAreaMaxY = 630m

**.staHost[*].mobility.constraintAreaMinX = 0m
**.staHost[*].mobility.constraintAreaMinY = 0m
**.staHost[*].mobility.constraintAreaMaxX = 1000m
**.staHost[*].mobility.constraintAreaMaxY = 630m

**.constraintAreaMinZ = 0m
**.constraintAreaMaxZ = 0.1m

**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMaxX = 1200m
**.constraintAreaMaxY = 630m


#**.host*.mobility.updateInterval = 0.1
**.meshHost[*].mobility.updateInterval = 0.1s

# udp apps (on)
# general parameters

**.channelsToScan = "1"

**.staHost[*].mobility.initFromDisplayString = false
**.meshHost[*].mobility.initFromDisplayString = false

#### Traffic destination
#gateway to fix

**.MPP2.numUdpApps = 1
#**.staHost[8].numUdpApps = 1
**.staHost[0..8].numUdpApps = 1
**.meshHost[0..8].numUdpApps = 1
#**.meshHost[*].numUdpApps = 0

#mobile to gateway
**.meshHost[*].udpApp[0].serverAddress ="MPP2"
**.staHost[*].udpApp[0].serverAddress ="MPP2"
**.staHost[*].udpApp[0].typename = "UDPVideoStreamCli2"
**.meshHost[*].udpApp[0].typename = "UDPVideoStreamCli2"
**.MPP2.udpApp[0].typename = "UDPVideoStreamSvr2"
**.MPP2.udpApp[0].localPort = 1235

**.startTime  = uniform(20s,35s)
**.reintent = 60s
**.timeOut = 10s

**.udpApp[0].localPort = 1234
**.udpApp[0].serverPort = 1235
**.MPP**.convertToEtherFrame = false


**.MPP2.udpApp[0].sendInterval =  0.08s
**.MPP2.udpApp[0].packetLen = 512B
**.MPP2.udpApp[0].videoSize = 10MiB


# tcp apps (off)
**.numTcpApps = 0
**.tcpAppType = "TelnetApp"

# ping app (host[0] pinged by others)
# ping app (off)
**.pingApp.destAddr = ""
**.pingApp.srcAddr = ""
**.pingApp.packetSize = 56B
**.pingApp.interval = 1s
**.pingApp.hopLimit = 32
**.pingApp.count = 0
**.pingApp.startTime = 1s
**.pingApp.printPing = true


# tcp settings
**.tcp.mss = 1024
**.tcp.advertisedWindow = 14336  # 14*mss
**.tcp.sendQueueClass = "TCPMsgBasedSendQueue"
**.tcp.receiveQueueClass = "TCPMsgBasedRcvQueue"
**.tcp.tcpAlgorithmClass = "TCPReno"
**.tcp.recordStats = true
**.tcp.sackSupport = true   # Selective Acknowledgment (RFC 2018, 2883, 3517) support (header option) (SACK will be enabled for a connection if both endpoints support it)


# ip settings
**.routingFile = ""
**.ip.procDelay = 10us
# **.IPForward=false

# ARP configuration
**.arp.retryTimeout = 1s
**.arp.retryCount = 3
**.arp.cacheTimeout = 100s
**.arp.globalARP = true
#**.networklayer.proxyARP = true  # Host's is hardwired "false"

# manet routing

**.hasLocator = true

# nic settings
**.wlan*.mgmt.frameCapacity = 10
#**.wlan.mgmt.Willingness = 3
#**.wlan.mgmt.Hello_ival = 2
#**.wlan.mgmt.Tc_ival = 5
#**.wlan.mgmt.Mid_ival = 5
#**.wlan.mgmt.use_mac = false

#**.numSta = 10
**.numMeshHost = 10
#**.numMeshHost = 0

**.dot11MeshHWMPnetDiameterTraversalTime = 102400us
**.dot11MeshHWMPpreqMinInterval = 102400us
**.dot11MeshHWMPperrMinInterval = 102400us
**.dot11MeshHWMPactiveRootTimeout = 1024*7000 us
**.dot11MeshHWMPactivePathTimeout = 1024*7000 us
**.dot11MeshHWMPpathToRootInterval = 1024*2000 us
##################

**.fixhostB[*].autoconfigurator.interfaces = "wlanMesh wlan0"
**.fixhost2[*].autoconfigurator.interfaces = "wlanMesh wlan0"
**.fixhost3[*].autoconfigurator.interfaces = "wlanMesh wlan0"
**.fixhost4B[*].autoconfigurator.interfaces = "wlanMesh wlan0"
**.fixhost5B[*].autoconfigurator.interfaces = "wlanMesh wlan0"
**.fixhost6[*].autoconfigurator.interfaces = "wlanMesh wlan0"
**.fixhost7[*].autoconfigurator.interfaces = "wlanMesh wlan0"
**.MPP*.autoconfigurator.interfaces = "wlanMesh eth0"
**.staHost[*].autoconfigurator.interfaces = "wlan0"
**.meshHost[*].autoconfigurator.interfaces = "wlan0"


**.fixhostB[*].autoconfigurator.defaultInterface = "wlanMesh"
**.fixhost2[*].autoconfigurator.defaultInterface = "wlanMesh"
**.fixhost3[*].autoconfigurator.defaultInterface = "wlanMesh"
**.fixhost4B[*].autoconfigurator.defaultInterface = "wlanMesh"
**.fixhost5B[*].autoconfigurator.defaultInterface = "wlanMesh"
**.fixhost6[*].autoconfigurator.defaultInterface = "wlanMesh"
**.fixhost7[*].autoconfigurator.defaultInterface = "wlanMesh"
**.MPP*.autoconfigurator.defaultInterface = "wlanMesh"
**.staHost[*].autoconfigurator.defaultInterface = "wlan0"
**.meshHost[*].autoconfigurator.defaultInterface = "wlan0"

**.fixhostB[*].autoconfigurator.defaultAddressInterface = "wlanMesh"
**.fixhost2[*].autoconfigurator.defaultAddressInterface = "wlanMesh"
**.fixhost3[*].autoconfigurator.defaultAddressInterface = "wlanMesh"
**.fixhost4B[*].autoconfigurator.defaultAddressInterface = "wlanMesh"
**.fixhost5B[*].autoconfigurator.defaultAddressInterface = "wlanMesh"
**.fixhost6[*].autoconfigurator.defaultAddressInterface = "wlanMesh"
**.fixhost7[*].autoconfigurator.defaultAddressInterface = "wlanMesh"
**.MPP*.autoconfigurator.defaultAddressInterface = "wlanMesh"
**.staHost[*].autoconfigurator.defaultAddressInterface = "wlan0"
**.meshHost[*].autoconfigurator.defaultInterface = "wlan0"

**.fixhostB[*].autoconfigurator.addressBaseList = "192.168.0.0 192.168.0.0"
**.fixhost2[*].autoconfigurator.addressBaseList = "192.168.0.0 192.168.0.0"
**.fixhost3[*].autoconfigurator.addressBaseList = "192.168.0.0 192.168.0.0"
**.fixhost4B[*].autoconfigurator.addressBaseList = "192.168.0.0 192.168.0.0"
**.fixhost5B[*].autoconfigurator.addressBaseList = "192.168.0.0 192.168.0.0"
**.fixhost6[*].autoconfigurator.addressBaseList = "192.168.0.0 192.168.0.0"
**.fixhost7[*].autoconfigurator.addressBaseList = "192.168.0.0 192.168.0.0"
**.MPP*.autoconfigurator.addressBaseList = "192.168.0.0 192.168.2.0"
**.staHost[*].autoconfigurator.addressBaseList = "192.168.0.0"
**.meshHost[*].autoconfigurator.addressBaseList = "192.168.0.0"

**.fixhostB[*].autoconfigurator.addressMask = "255.255.0.0 255.255.0.0"
**.fixhost2[*].autoconfigurator.addressMask = "255.255.0.0 255.255.0.0"
**.fixhost3[*].autoconfigurator.addressMask = "255.255.0.0 255.255.0.0"
**.fixhost4B[*].autoconfigurator.addressMask = "255.255.0.0 255.255.0.0"
**.fixhost5B[*].autoconfigurator.addressMask = "255.255.0.0 255.255.0.0"
**.fixhost6[*].autoconfigurator.addressMask = "255.255.0.0 255.255.0.0"
**.fixhost7[*].autoconfigurator.addressMask = "255.255.0.0 255.255.0.0"
**.MPP*.autoconfigurator.addressMask = "255.255.0.0 255.255.255.0"
**.staHost[*].autoconfigurator.addressMask = "255.255.0.0"
**.meshHost[*].autoconfigurator.addressMask = "255.255.0.0"



# nic settings
**.wlan[*].opMode = "g"
**.wlan[*].bitrate = 54Mbps
**.mac.EDCA = false
**.wlan[*].mac.address = "auto"
**.wlan[*].mac.maxQueueSize = 14
**.wlan[*].mac.rtsThresholdBytes = 3000B
**.wlan[*].mac.basicBitrate = 6Mbps  # 24Mbps
**.wlan[*].mac.retryLimit = 3 #************************************************num of retrasmission before link break!!!!!
**.wlan[*].mac.cwMinData = 31
**.wlan[*].mac.cwMinMulticast = 31
**.wlan[*].mac.slotTime = 9us #
**.wlan[*].mac.AIFSN = 2 #DIFS
**.wlan[*].radio.transmitterPower=2.0mW
**.wlan[*].radio.pathLossAlpha=2 ##################################################################
**.wlan[*].radio.snirThreshold = 4dB  # in dB
**.wlan[*].radio.thermalNoise=-110dBm
**.wlan[*].radio.sensitivity=-82dBm
#**.wlan*.radio.sensitivity=-77dBm
#MY COMMENT!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
#**.wlan[*].radio.berTableFile="/home/luca/per_table_80211g_Trivellato.dat"
**.wlan[*].radio.berTableFile="per_table_80211g_Trivellato.dat"



# nic settings
**.mac[*].EDCA = false
**.wlan*.mac[*].address = "auto"
**.wlan*.mac[*].maxQueueSize = 14
**.wlan*.mac[*].rtsThresholdBytes = 3000B
**.wlan*.mac[*].bitrate = 54Mbps
**.wlan*.mac[*].basicBitrate = 6Mbps  # 24Mbps
**.wlan*.mac[*].retryLimit = 3 #************************************************num of retrasmission before link break!!!!!
**.wlan*.mac[*].cwMinData = 31
**.wlan*.mac[*].cwMinMulticast = 31
**.wlan*.mac[*].opMode = "g"
**.wlan*.mac[*].slotTime = 9us #
**.wlan*.mac[*].AIFSN = 2 #DIFS


**.radio.transmitter.power = 2.0mW
**.radio.receiver.errorModelType = "Ieee80211BerTableErrorModel"
**.radio.receiver.errorModel.berTableFile = "per_table_80211g_Trivellato.dat"

**.radio.snirThreshold = 4dB  # in dB
**.radio.thermalNoise=-110dBm
**.radio.sensitivity=-82dBm


*.radioMedium.mediumLimitCache.maxTransmissionPower = 2.0mW


**.MPP**.drawCoverage = true
**.drawCoverage = false

#**.use-default=yes

# proccesing delay in the routing protocol, avoid syncronization
**.broadcastDelay = uniform(0s,0.01s) # 10 mseconds 
**.unicastDelay = uniform(0s,0.005s)

#/ parameters : DYMOUM
#**.no_path_acc_ = false
**.no_path_acc_ = true
**.reissue_rreq_ = false
**.s_bit_ = false
**.hello_ival_ = 0
**.MaxPktSec = 20 #// 10
**.promiscuous = false
#**.NetDiameter = 10
**.NetDiameter = 30
**.RouteTimeOut = 3000
**.RouteDeleteTimeOut = 3000*5 #//5*RouteTimeOut
**.RREQWaitTime = 1000
**.RREQTries =3
**.noRouteBehaviour=1

#// Olsr
**.Willingness=3
**.Hello_ival=2s
**.Tc_ival=5s
**.Mid_ival=5s
**.use_mac =0 #1
**.Mpr_algorithm =  1
**.routing_algorithm =   1
**.Link_quality = 2
**.Fish_eye = false
**.Tc_redundancy =    3
**.Link_delay = true #//default false
**.C_alpha=0.2



##################
#################
################3
# mobility models

**.meshHost[*].mobilityType = "inet.mobility.single.RandomWPMobility"
**.staHost[*].mobilityType = "inet.mobility.single.RandomWPMobility"


**.meshHost[*].mobility.speed = uniform(5mps,20mps)
**.meshHost[*].mobility.waitTime = 0s
**.staHost[*].mobility.speed = uniform(1mps,2mps)
**.staHost[*].mobility.waitTime = uniform(100s,500s)

**.fixhost**.FixNode = true
**.MPP**.FixNode = true

[Config React]
description = "reactive"
#### traffic data rate
repeat = 5
**.MPP*.wlanMesh.mgmt.IsGateWay = true
seed-set = ${repetition}
**.mgmt.useProactive = false
**.mgmt.useReactive = true
output-scalar-file = ${resultdir}/reactConMeshH.sca


## no gateway y no anycast
[Config ReactNoGate]
description = "reactive no gateway"
#### traffic data rate
**.MPP*.wlanMesh.mgmt.IsGateWay = false
repeat = 5
seed-set = ${repetition}
**.mgmt.useProactive = false
**.mgmt.useReactive = true
output-scalar-file = ${resultdir}/reactNoGateConMeshH.sca


[Config Proact]
**.MPP*.wlanMesh.mgmt.IsGateWay = true
description = "proactive gateway"
#### traffic data rate
repeat = 5
seed-set = ${repetition}
**.mgmt.useProactive = true
**.mgmt.useReactive = false
output-scalar-file = ${resultdir}/proactConMeshH.sca



## no gateway y no anycast
[Config ProactNoGate]
description = "proactive no gateway"
#### traffic data rate
**.MPP*.wlanMesh.mgmt.IsGateWay = false
repeat = 5
seed-set = ${repetition}
**.mgmt.useProactive = true
**.mgmt.useReactive = false
output-scalar-file = ${resultdir}/proactNoGateConMeshH.sca


[Config Hybrid]
#### traffic data rate
**.MPP*.wlanMesh.mgmt.IsGateWay = true
description = "Hibrid gateway"
repeat = 5
seed-set = ${repetition}
**.fixhost**.mgmt.useProactive = true
**.MPP**.mgmt.useProactive = true
**.mgmt.useProactive = false
**.mgmt.useReactive = true
output-scalar-file = ${resultdir}/hybridConMeshH.sca


## no gateway y no anycast
[Config HybridNoGate]
description = "Hibrid no gateway"
#### traffic data rate
**.MPP*.wlanMesh.mgmt.IsGateWay = false
repeat = 5
seed-set = ${repetition}
**.fixhost**.mgmt.useProactive = true
**.MPP**.mgmt.useProactive = true
**.mgmt.useProactive = false
**.mgmt.useReactive = true
output-scalar-file = ${resultdir}/hybridNoGateConMeshH.sca


[Config Hwmp]
#### traffic data rate
**.MPP*.wlanMesh.mgmt.IsGateWay = true
description = "Hwmp gateway"
repeat = 5
seed-set = ${repetition}
**.MPP2.**.isRoot = true
**.mgmt.useProactive = false
**.mgmt.useReactive = false
**.mgmt.useHwmp = true
output-scalar-file = ${resultdir}/hwmpConMeshH.sca


## no gateway y no anycast
[Config HwmpNoGate]
description = "Hwmp no gateway"
#### traffic data rate
**.MPP*.wlanMesh.mgmt.IsGateWay = false
repeat = 5
seed-set = ${repetition}
**.MPP2.**.isRoot = true
**.mgmt.useProactive = false
**.mgmt.useReactive = false
**.mgmt.useHwmp = true
output-scalar-file = ${resultdir}/hwmpNoGateConMeshH.sca



[Config ReactST]
description = "React ST gateway"
**.MPP*.wlanMesh.mgmt.IsGateWay = true
#### traffic data rate
repeat = 5
seed-set = ${repetition}
**.MPP2.**.isRoot = true
**.mgmt.useProactive = false
**.mgmt.useReactive = true
output-scalar-file = ${resultdir}/reactSTConMeshH.sca


## no gateway y no anycast
[Config ReactSTNoGate]
description = "React ST no gateway"
#### traffic data rate
**.MPP*.wlanMesh.mgmt.IsGateWay = false
repeat = 5
seed-set = ${repetition}
**.MPP2.**.isRoot = true
**.mgmt.useProactive = false
**.mgmt.useReactive = true
output-scalar-file = ${resultdir}/reactSTNoGateConMeshH.sca



