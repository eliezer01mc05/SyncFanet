//
// Generated file, do not edit! Created by nedtool 5.5 from uavnet/routing/manet/base/ControlInfoBreakLink.msg.
//

#ifndef __INET__INETMANET_CONTROLINFOBREAKLINK_M_H
#define __INET__INETMANET_CONTROLINFOBREAKLINK_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0505
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif

// cplusplus {{
#include "inet/linklayer/common/MACAddress.h"
// }}


namespace inet {
namespace inetmanet {

/**
 * Class generated from <tt>uavnet/routing/manet/base/ControlInfoBreakLink.msg:31</tt> by nedtool.
 * <pre>
 * class ControlInfoBreakLink
 * {
 *     MACAddress dest;   //
 * }
 * </pre>
 */
class ControlInfoBreakLink : public ::omnetpp::cObject
{
  protected:
    MACAddress dest;

  private:
    void copy(const ControlInfoBreakLink& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const ControlInfoBreakLink&);

  public:
    ControlInfoBreakLink();
    ControlInfoBreakLink(const ControlInfoBreakLink& other);
    virtual ~ControlInfoBreakLink();
    ControlInfoBreakLink& operator=(const ControlInfoBreakLink& other);
    virtual ControlInfoBreakLink *dup() const override {return new ControlInfoBreakLink(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual MACAddress& getDest();
    virtual const MACAddress& getDest() const {return const_cast<ControlInfoBreakLink*>(this)->getDest();}
    virtual void setDest(const MACAddress& dest);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const ControlInfoBreakLink& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, ControlInfoBreakLink& obj) {obj.parsimUnpack(b);}

} // namespace inetmanet
} // namespace inet

#endif // ifndef __INET__INETMANET_CONTROLINFOBREAKLINK_M_H

